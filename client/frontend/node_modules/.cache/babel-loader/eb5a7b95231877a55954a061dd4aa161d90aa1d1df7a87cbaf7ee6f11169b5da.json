{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\first_aid_app\\\\client\\\\frontend\\\\src\\\\components\\\\Chat\\\\image\\\\ImageUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageUploader = ({\n  onImageSend,\n  onCancel\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [preview, setPreview] = useState(null);\n  const [showCamera, setShowCamera] = useState(false);\n  const [stream, setStream] = useState(null);\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setPreview(imageUrl);\n      await sendImageToServer(file, imageUrl);\n    }\n  };\n  const handleOpenFileDialog = () => {\n    fileInputRef.current.click();\n  };\n  const handleStartCamera = async () => {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      setStream(mediaStream);\n      setShowCamera(true);\n    } catch (err) {\n      console.error(\"Failed to access camera:\", err);\n      alert(\"Unable to access camera. Please check your permissions.\");\n    }\n  };\n  useEffect(() => {\n    if (showCamera && videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n    }\n  }, [showCamera, stream]);\n  const handleTakePhoto = async () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas) {\n      console.error(\"Video or canvas element not available\");\n      return;\n    }\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(async blob => {\n      if (!blob) {\n        console.error(\"Failed to capture image from camera\");\n        return;\n      }\n      const imageUrl = URL.createObjectURL(blob);\n      setPreview(imageUrl);\n      await sendImageToServer(blob, imageUrl);\n      stopCamera();\n    }, \"image/jpeg\");\n  };\n  const stopCamera = useCallback(() => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n    setShowCamera(false);\n    setStream(null);\n  }, [stream]);\n  const sendImageToServer = async (fileOrBlob, previewUrl) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", fileOrBlob, \"image.jpg\");\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/upload_image`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) {\n        const errorText = await res.text();\n        throw new Error(`Upload failed: ${errorText}`);\n      }\n      const data = await res.json();\n\n      // קורא ל- onImageSend שקיבלנו בפרופס עם כתובת התמונה מהשרת או כתובת זמנית\n      if (onImageSend) {\n        onImageSend(data.imageUrl || previewUrl);\n      }\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Error uploading image: \" + error.message);\n    }\n  };\n  useEffect(() => {\n    return () => stopCamera(); // Clean up on unmount\n  }, [stopCamera]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !showCamera ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOpenFileDialog,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \"image/*\",\n        style: {\n          display: \"none\"\n        },\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartCamera,\n        children: \"Take Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), preview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\",\n        style: {\n          maxWidth: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onCancel && onCancel(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTakePhoto,\n        children: \"Capture Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCamera,\n        children: \"Stop Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"mnt3Mp/u7beHGIFRjfbovj+peRY=\");\n_c = ImageUploader;\nexport default ImageUploader;\n\n// import React, { useRef, useState, useEffect, useCallback } from \"react\";\n\n// const ImageUploader = ({ onImageSend }) => {\n//   const fileInputRef = useRef(null);\n//   const videoRef = useRef(null);\n//   const canvasRef = useRef(null);\n//   const [preview, setPreview] = useState(null);\n//   const [showCamera, setShowCamera] = useState(false);\n//   const [stream, setStream] = useState(null);\n\n//   const handleFileChange = async (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       const imageUrl = URL.createObjectURL(file);\n//       setPreview(imageUrl);\n//       await sendImageToServer(file, imageUrl);\n//     }\n//   };\n\n//   const handleOpenFileDialog = () => {\n//     fileInputRef.current.click();\n//   };\n\n//   const handleStartCamera = async () => {\n//     try {\n//       const mediaStream = await navigator.mediaDevices.getUserMedia({\n//         video: true,\n//       });\n//       //videoRef.current.srcObject = mediaStream;\n//       setStream(mediaStream);\n//       setShowCamera(true);\n//     } catch (err) {\n//       console.error(\"Failed to access camera:\", err);\n//       alert(\"Unable to access camera. Please check your permissions.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (showCamera && videoRef.current && stream) {\n//       videoRef.current.srcObject = stream;\n//       videoRef.current.play();\n//     }\n//   }, [showCamera, stream]);\n\n//   const handleTakePhoto = async () => {\n//     const video = videoRef.current;\n//     const canvas = canvasRef.current;\n//     if (!video || !canvas) {\n//       console.error(\"Video or canvas element not available\");\n//       return;\n//     }\n//     canvas.width = video.videoWidth;\n//     canvas.height = video.videoHeight;\n//     const ctx = canvas.getContext(\"2d\");\n//     ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n//     canvas.toBlob(async (blob) => {\n//       if (!blob) {\n//         console.error(\"Failed to capture image from camera\");\n//         return;\n//       }\n//       const imageUrl = URL.createObjectURL(blob);\n//       setPreview(imageUrl);\n//       await sendImageToServer(blob, imageUrl);\n//       stopCamera();\n//     }, \"image/jpeg\");\n//   };\n\n//   const stopCamera = useCallback(() => {\n//     if (stream) {\n//       stream.getTracks().forEach((track) => track.stop());\n//     }\n//     setShowCamera(false);\n//     setStream(null);\n//   }, [stream]);\n\n// //   const sendImageToServer = async (fileOrBlob, previewUrl) => {\n// //     onImageSend(previewUrl);\n\n// //     const formData = new FormData();\n// //     formData.append(\"image\", fileOrBlob);\n\n// //     try {\n// //       const res = await fetch(`${process.env.REACT_APP_API_URL}/upload-image`, {\n// //         method: \"POST\",\n// //         body: formData,\n// //       });\n\n// //       if (!res.ok) {\n// //         const errorText = await res.text();\n// //         console.error(\"Image upload error:\", errorText);\n// //       } else {\n// //         console.log(\"Image uploaded successfully\");\n// //       }\n// //     } catch (err) {\n// //       console.error(\"Failed to send image:\", err.message);\n// //     }\n// //   };\n//  const sendImageToServer = async (fileOrBlob, previewUrl) => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"image\", fileOrBlob, \"image.jpg\");\n\n//       const res = await fetch(`${process.env.REACT_APP_API_URL}/upload_image`, {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (!res.ok) {\n//         const errorText = await res.text();\n//         throw new Error(`Upload failed: ${errorText}`);\n//       }\n\n//       const data = await res.json();\n\n//       // data.imageUrl זה כתובת התמונה שהשרת החזיר - צריך שהשרת יחזיר משהו כזה\n//       if (onUploadSuccess) {\n//         onUploadSuccess(data.imageUrl || previewUrl);\n//       }\n//     } catch (error) {\n//       console.error(\"Error uploading image:\", error);\n//       alert(\"Error uploading image: \" + error.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     return () => stopCamera(); // Clean up on unmount\n//   }, [stopCamera]);\n\n//    return (\n//     <div>\n//       {!showCamera ? (\n//         <>\n//           <button onClick={handleOpenFileDialog}>Upload Image</button>\n//           <input\n//             ref={fileInputRef}\n//             type=\"file\"\n//             accept=\"image/*\"\n//             style={{ display: \"none\" }}\n//             onChange={handleFileChange}\n//           />\n//           <button onClick={handleStartCamera}>Take Photo</button>\n//           {preview && <img src={preview} alt=\"Preview\" style={{ maxWidth: \"100%\" }} />}\n//           <button onClick={onCancel}>Cancel</button>\n//         </>\n//       ) : (\n//         <div>\n//           <video ref={videoRef} style={{ width: \"100%\" }} />\n//           <button onClick={handleTakePhoto}>Capture Photo</button>\n//           <button onClick={stopCamera}>Stop Camera</button>\n//           <canvas ref={canvasRef} style={{ display: \"none\" }} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUploader","onImageSend","onCancel","_s","fileInputRef","videoRef","canvasRef","preview","setPreview","showCamera","setShowCamera","stream","setStream","handleFileChange","e","file","target","files","imageUrl","URL","createObjectURL","sendImageToServer","handleOpenFileDialog","current","click","handleStartCamera","mediaStream","navigator","mediaDevices","getUserMedia","video","err","console","error","alert","srcObject","play","handleTakePhoto","canvas","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","toBlob","blob","stopCamera","getTracks","forEach","track","stop","fileOrBlob","previewUrl","formData","FormData","append","res","fetch","process","env","REACT_APP_API_URL","method","body","ok","errorText","text","Error","data","json","message","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","accept","style","display","onChange","src","alt","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Documents/first_aid_app/client/frontend/src/components/Chat/image/ImageUploader.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\nconst ImageUploader = ({ onImageSend, onCancel }) => {\r\n  const fileInputRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [showCamera, setShowCamera] = useState(false);\r\n  const [stream, setStream] = useState(null);\r\n\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setPreview(imageUrl);\r\n      await sendImageToServer(file, imageUrl);\r\n    }\r\n  };\r\n\r\n  const handleOpenFileDialog = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleStartCamera = async () => {\r\n    try {\r\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n      });\r\n      setStream(mediaStream);\r\n      setShowCamera(true);\r\n    } catch (err) {\r\n      console.error(\"Failed to access camera:\", err);\r\n      alert(\"Unable to access camera. Please check your permissions.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showCamera && videoRef.current && stream) {\r\n      videoRef.current.srcObject = stream;\r\n      videoRef.current.play();\r\n    }\r\n  }, [showCamera, stream]);\r\n\r\n  const handleTakePhoto = async () => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!video || !canvas) {\r\n      console.error(\"Video or canvas element not available\");\r\n      return;\r\n    }\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    canvas.toBlob(async (blob) => {\r\n      if (!blob) {\r\n        console.error(\"Failed to capture image from camera\");\r\n        return;\r\n      }\r\n      const imageUrl = URL.createObjectURL(blob);\r\n      setPreview(imageUrl);\r\n      await sendImageToServer(blob, imageUrl);\r\n      stopCamera();\r\n    }, \"image/jpeg\");\r\n  };\r\n\r\n  const stopCamera = useCallback(() => {\r\n    if (stream) {\r\n      stream.getTracks().forEach((track) => track.stop());\r\n    }\r\n    setShowCamera(false);\r\n    setStream(null);\r\n  }, [stream]);\r\n\r\n  const sendImageToServer = async (fileOrBlob, previewUrl) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", fileOrBlob, \"image.jpg\");\r\n\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/upload_image`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorText = await res.text();\r\n        throw new Error(`Upload failed: ${errorText}`);\r\n      }\r\n\r\n      const data = await res.json();\r\n\r\n      // קורא ל- onImageSend שקיבלנו בפרופס עם כתובת התמונה מהשרת או כתובת זמנית\r\n      if (onImageSend) {\r\n        onImageSend(data.imageUrl || previewUrl);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading image:\", error);\r\n      alert(\"Error uploading image: \" + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => stopCamera(); // Clean up on unmount\r\n  }, [stopCamera]);\r\n\r\n  return (\r\n    <div>\r\n      {!showCamera ? (\r\n        <>\r\n          <button onClick={handleOpenFileDialog}>Upload Image</button>\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            style={{ display: \"none\" }}\r\n            onChange={handleFileChange}\r\n          />\r\n          <button onClick={handleStartCamera}>Take Photo</button>\r\n          {preview && <img src={preview} alt=\"Preview\" style={{ maxWidth: \"100%\" }} />}\r\n          <button onClick={() => onCancel && onCancel()}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <video ref={videoRef} style={{ width: \"100%\" }} />\r\n          <button onClick={handleTakePhoto}>Capture Photo</button>\r\n          <button onClick={stopCamera}>Stop Camera</button>\r\n          <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n\r\n\r\n// import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\n// const ImageUploader = ({ onImageSend }) => {\r\n//   const fileInputRef = useRef(null);\r\n//   const videoRef = useRef(null);\r\n//   const canvasRef = useRef(null);\r\n//   const [preview, setPreview] = useState(null);\r\n//   const [showCamera, setShowCamera] = useState(false);\r\n//   const [stream, setStream] = useState(null);\r\n\r\n//   const handleFileChange = async (e) => {\r\n//     const file = e.target.files[0];\r\n//     if (file) {\r\n//       const imageUrl = URL.createObjectURL(file);\r\n//       setPreview(imageUrl);\r\n//       await sendImageToServer(file, imageUrl);\r\n//     }\r\n//   };\r\n\r\n//   const handleOpenFileDialog = () => {\r\n//     fileInputRef.current.click();\r\n//   };\r\n\r\n//   const handleStartCamera = async () => {\r\n//     try {\r\n//       const mediaStream = await navigator.mediaDevices.getUserMedia({\r\n//         video: true,\r\n//       });\r\n//       //videoRef.current.srcObject = mediaStream;\r\n//       setStream(mediaStream);\r\n//       setShowCamera(true);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to access camera:\", err);\r\n//       alert(\"Unable to access camera. Please check your permissions.\");\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (showCamera && videoRef.current && stream) {\r\n//       videoRef.current.srcObject = stream;\r\n//       videoRef.current.play();\r\n//     }\r\n//   }, [showCamera, stream]);\r\n\r\n//   const handleTakePhoto = async () => {\r\n//     const video = videoRef.current;\r\n//     const canvas = canvasRef.current;\r\n//     if (!video || !canvas) {\r\n//       console.error(\"Video or canvas element not available\");\r\n//       return;\r\n//     }\r\n//     canvas.width = video.videoWidth;\r\n//     canvas.height = video.videoHeight;\r\n//     const ctx = canvas.getContext(\"2d\");\r\n//     ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n//     canvas.toBlob(async (blob) => {\r\n//       if (!blob) {\r\n//         console.error(\"Failed to capture image from camera\");\r\n//         return;\r\n//       }\r\n//       const imageUrl = URL.createObjectURL(blob);\r\n//       setPreview(imageUrl);\r\n//       await sendImageToServer(blob, imageUrl);\r\n//       stopCamera();\r\n//     }, \"image/jpeg\");\r\n//   };\r\n\r\n//   const stopCamera = useCallback(() => {\r\n//     if (stream) {\r\n//       stream.getTracks().forEach((track) => track.stop());\r\n//     }\r\n//     setShowCamera(false);\r\n//     setStream(null);\r\n//   }, [stream]);\r\n\r\n// //   const sendImageToServer = async (fileOrBlob, previewUrl) => {\r\n// //     onImageSend(previewUrl);\r\n\r\n// //     const formData = new FormData();\r\n// //     formData.append(\"image\", fileOrBlob);\r\n\r\n// //     try {\r\n// //       const res = await fetch(`${process.env.REACT_APP_API_URL}/upload-image`, {\r\n// //         method: \"POST\",\r\n// //         body: formData,\r\n// //       });\r\n\r\n// //       if (!res.ok) {\r\n// //         const errorText = await res.text();\r\n// //         console.error(\"Image upload error:\", errorText);\r\n// //       } else {\r\n// //         console.log(\"Image uploaded successfully\");\r\n// //       }\r\n// //     } catch (err) {\r\n// //       console.error(\"Failed to send image:\", err.message);\r\n// //     }\r\n// //   };\r\n//  const sendImageToServer = async (fileOrBlob, previewUrl) => {\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"image\", fileOrBlob, \"image.jpg\");\r\n\r\n//       const res = await fetch(`${process.env.REACT_APP_API_URL}/upload_image`, {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         const errorText = await res.text();\r\n//         throw new Error(`Upload failed: ${errorText}`);\r\n//       }\r\n\r\n//       const data = await res.json();\r\n\r\n//       // data.imageUrl זה כתובת התמונה שהשרת החזיר - צריך שהשרת יחזיר משהו כזה\r\n//       if (onUploadSuccess) {\r\n//         onUploadSuccess(data.imageUrl || previewUrl);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading image:\", error);\r\n//       alert(\"Error uploading image: \" + error.message);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     return () => stopCamera(); // Clean up on unmount\r\n//   }, [stopCamera]);\r\n\r\n//    return (\r\n//     <div>\r\n//       {!showCamera ? (\r\n//         <>\r\n//           <button onClick={handleOpenFileDialog}>Upload Image</button>\r\n//           <input\r\n//             ref={fileInputRef}\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             style={{ display: \"none\" }}\r\n//             onChange={handleFileChange}\r\n//           />\r\n//           <button onClick={handleStartCamera}>Take Photo</button>\r\n//           {preview && <img src={preview} alt=\"Preview\" style={{ maxWidth: \"100%\" }} />}\r\n//           <button onClick={onCancel}>Cancel</button>\r\n//         </>\r\n//       ) : (\r\n//         <div>\r\n//           <video ref={videoRef} style={{ width: \"100%\" }} />\r\n//           <button onClick={handleTakePhoto}>Capture Photo</button>\r\n//           <button onClick={stopCamera}>Stop Camera</button>\r\n//           <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ImageUploader;\r\n"],"mappings":"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AAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1E,EAAA,CAlIIH,aAAa;AAAAuF,EAAA,GAAbvF,aAAa;AAoInB,eAAeA,aAAa;;AAG5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}