{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport \"../styles/LocationFetcher.css\";\nfunction LocationFetcher({\n  onLocation\n}) {\n  _s();\n  const calledRef = useRef(false);\n  const [manualLat, setManualLat] = useState(\"\");\n  const [manualLng, setManualLng] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (calledRef.current) return; // אם כבר קרינו פעם אחת — לא עושים שוב\n    calledRef.current = true; // מסמנים שעכשיו קרינו\n\n    console.log(\"LocationFetcher mounted (first time only)\");\n    if (!navigator.geolocation) {\n      console.error(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      onLocation({\n        lat: latitude,\n        lng: longitude\n      });\n    }, error => {\n      console.error(\"Error fetching location:\", error.message);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 0\n    });\n  }, [onLocation]);\n  const handleManualSubmit = e => {\n    e.preventDefault();\n    const lat = parseFloat(manualLat);\n    const lng = parseFloat(manualLng);\n    if (isNaN(lat) || isNaN(lng)) {\n      setError(\"Please enter valid latitude and longitude.\");\n      return;\n    }\n    onLocation({\n      lat,\n      lng\n    });\n    setManualLat(\"\");\n    setManualLng(\"\");\n    setError(null);\n  };\n  return null;\n}\n\n// function LocationFetcher({ onLocation }) {\n//     useEffect(() => {\n//         console.log(\"LocationFetcher mounted\");\n//         if(!navigator.geolocation) {\n//             console.error(\"Geolocation is not supported by your browser.\");\n//             return;\n//         }\n//         navigator.geolocation.getCurrentPosition(\n//             (position) => {\n//                 const { latitude, longitude } = position.coords;\n//                 onLocation({lat: latitude,lng: longitude });\n//             },\n//             (error) => {\n//                 console.error(\"Error fetching location:\", error.message);\n//             },\n//             {\n//                 enableHighAccuracy: true,\n//                 timeout: 10000,\n//                 maximumAge: 0,\n//             }   \n//         );\n//     }, [onLocation]);\n//     return null;   //לא צריך להציג UI\n// }\n_s(LocationFetcher, \"xVO4sjIgZaFB+TmxDtIbr6pnUn4=\");\n_c = LocationFetcher;\nexport default LocationFetcher;\nvar _c;\n$RefreshReg$(_c, \"LocationFetcher\");","map":{"version":3,"names":["useEffect","useRef","useState","LocationFetcher","onLocation","_s","calledRef","manualLat","setManualLat","manualLng","setManualLng","error","setError","current","console","log","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","message","enableHighAccuracy","timeout","maximumAge","handleManualSubmit","e","preventDefault","parseFloat","isNaN","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/first_aid_app/client/frontend/src/components/LocationFetcher.jsx"],"sourcesContent":["import { useEffect,useRef,useState } from \"react\";\r\nimport \"../styles/LocationFetcher.css\";\r\nfunction LocationFetcher({ onLocation }) {\r\n  const calledRef = useRef(false);\r\n  const [manualLat, setManualLat] = useState(\"\");\r\n  const [manualLng, setManualLng] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (calledRef.current) return;   // אם כבר קרינו פעם אחת — לא עושים שוב\r\n    calledRef.current = true;        // מסמנים שעכשיו קרינו\r\n\r\n    console.log(\"LocationFetcher mounted (first time only)\");\r\n\r\n    if (!navigator.geolocation) {\r\n      console.error(\"Geolocation is not supported by your browser.\");\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        onLocation({ lat: latitude, lng: longitude });\r\n      },\r\n      (error) => {\r\n        console.error(\"Error fetching location:\", error.message);\r\n      },\r\n      {\r\n        enableHighAccuracy: true,\r\n        timeout: 10000,\r\n        maximumAge: 0,\r\n      }\r\n    );\r\n  }, [onLocation]);\r\n  const handleManualSubmit = (e) => {\r\n    e.preventDefault();\r\n    const lat = parseFloat(manualLat);\r\n    const lng = parseFloat(manualLng);\r\n    if (isNaN(lat) || isNaN(lng)) {\r\n      setError(\"Please enter valid latitude and longitude.\");\r\n      return;\r\n    }\r\n    onLocation({ lat, lng });\r\n    setManualLat(\"\");\r\n    setManualLng(\"\");\r\n    setError(null);\r\n  }\r\n  return null;\r\n}\r\n\r\n// function LocationFetcher({ onLocation }) {\r\n//     useEffect(() => {\r\n//         console.log(\"LocationFetcher mounted\");\r\n//         if(!navigator.geolocation) {\r\n//             console.error(\"Geolocation is not supported by your browser.\");\r\n//             return;\r\n//         }\r\n//         navigator.geolocation.getCurrentPosition(\r\n//             (position) => {\r\n//                 const { latitude, longitude } = position.coords;\r\n//                 onLocation({lat: latitude,lng: longitude });\r\n//             },\r\n//             (error) => {\r\n//                 console.error(\"Error fetching location:\", error.message);\r\n//             },\r\n//             {\r\n//                 enableHighAccuracy: true,\r\n//                 timeout: 10000,\r\n//                 maximumAge: 0,\r\n//             }   \r\n//         );\r\n//     }, [onLocation]);\r\n//     return null;   //לא צריך להציג UI\r\n// }\r\n\r\nexport default LocationFetcher;"],"mappings":";AAAA,SAASA,SAAS,EAACC,MAAM,EAACC,QAAQ,QAAQ,OAAO;AACjD,OAAO,+BAA+B;AACtC,SAASC,eAAeA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAMC,SAAS,GAAGL,MAAM,CAAC,KAAK,CAAC;EAC/B,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCF,SAAS,CAAC,MAAM;IACd,IAAIM,SAAS,CAACO,OAAO,EAAE,OAAO,CAAG;IACjCP,SAAS,CAACO,OAAO,GAAG,IAAI,CAAC,CAAQ;;IAEjCC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAExD,IAAI,CAACC,SAAS,CAACC,WAAW,EAAE;MAC1BH,OAAO,CAACH,KAAK,CAAC,+CAA+C,CAAC;MAC9D;IACF;IAEAK,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;MACZ,MAAM;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;MAC/ClB,UAAU,CAAC;QAAEmB,GAAG,EAAEH,QAAQ;QAAEI,GAAG,EAAEH;MAAU,CAAC,CAAC;IAC/C,CAAC,EACAV,KAAK,IAAK;MACTG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACc,OAAO,CAAC;IAC1D,CAAC,EACD;MACEC,kBAAkB,EAAE,IAAI;MACxBC,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE;IACd,CACF,CAAC;EACH,CAAC,EAAE,CAACxB,UAAU,CAAC,CAAC;EAChB,MAAMyB,kBAAkB,GAAIC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMR,GAAG,GAAGS,UAAU,CAACzB,SAAS,CAAC;IACjC,MAAMiB,GAAG,GAAGQ,UAAU,CAACvB,SAAS,CAAC;IACjC,IAAIwB,KAAK,CAACV,GAAG,CAAC,IAAIU,KAAK,CAACT,GAAG,CAAC,EAAE;MAC5BZ,QAAQ,CAAC,4CAA4C,CAAC;MACtD;IACF;IACAR,UAAU,CAAC;MAAEmB,GAAG;MAAEC;IAAI,CAAC,CAAC;IACxBhB,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,EAAE,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EACD,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAP,EAAA,CAvESF,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAyExB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}