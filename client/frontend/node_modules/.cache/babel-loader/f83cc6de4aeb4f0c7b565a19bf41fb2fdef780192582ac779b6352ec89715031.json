{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\first_aid_app\\\\client\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatWindow from './components/ChatWindow';\nimport MessageInput from './components/MessageInput';\nimport VoiceRecorder from './components/VoiceRecorder';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputMsg, setInputMsg] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  //לשמור את ההיסטוריה של ההודעות במערך\n  const [history, setHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const sendRequest = async () => {\n    if (!inputMsg.trim()) return;\n\n    // הוספת הודעת המשתמש\n    const userMessage = {\n      text: inputMsg,\n      fromUser: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const newHistory = [...history, inputMsg];\n    setHistory(newHistory);\n    try {\n      setIsLoading(true);\n      // שולחים את כל ההיסטוריה כולל ההודעה החדשה\n      console.log(\"API URL:\", process.env.REACT_APP_API_URL);\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          history: newHistory // שולחים את כל ההיסטוריה + ההודעה הנוכחית\n        })\n      });\n      if (!res.ok) {\n        throw new Error('Server error');\n      }\n      const data = await res.json();\n      const answer = (data === null || data === void 0 ? void 0 : data.result) || 'Error: No result received';\n\n      // הוספת תשובת השרת להודעות וגם להיסטוריה\n      setMessages(prev => [...prev, {\n        text: answer,\n        fromUser: false\n      }]);\n      setHistory([...newHistory, answer]);\n      setInputMsg('');\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        text: 'Error contacting server',\n        fromUser: false\n      }]);\n    }\n    setIsLoading(false);\n  };\n\n  // כפתור לאיפוס הצ'אט (היסטוריה והודעות)\n  const newChat = () => {\n    setMessages([]);\n    setHistory([]);\n    setInputMsg('');\n  };\n  const handleAudioRecorded = async audioBlob => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.webm');\n    try {\n      setIsLoading(true);\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/upload-audio`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      const transcript = data.transcript || '';\n\n      // מעדכנים את תיבת הטקסט בטקסט המומר\n      setInputMsg(transcript);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ResQPal Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      inputMsg: inputMsg,\n      setInputMsg: setInputMsg,\n      onSend: sendRequest,\n      disabled: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VoiceRecorder, {\n      onAudioRecorded: handleAudioRecorded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newChat,\n      style: {\n        marginTop: '1rem'\n      },\n      children: \"New Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X0negShZTrYQlEHN2apZXKgqt0E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatWindow","MessageInput","VoiceRecorder","jsxDEV","_jsxDEV","App","_s","inputMsg","setInputMsg","messages","setMessages","history","setHistory","isLoading","setIsLoading","sendRequest","trim","userMessage","text","fromUser","prev","newHistory","console","log","process","env","REACT_APP_API_URL","res","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","answer","result","error","newChat","handleAudioRecorded","audioBlob","formData","FormData","append","transcript","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSend","disabled","onAudioRecorded","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/first_aid_app/client/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatWindow from './components/ChatWindow';\nimport MessageInput from './components/MessageInput';\nimport VoiceRecorder from './components/VoiceRecorder';\nimport './App.css';\n\nfunction App() {\n  const [inputMsg, setInputMsg] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  //לשמור את ההיסטוריה של ההודעות במערך\n  const [history, setHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendRequest = async () => {\n    if (!inputMsg.trim()) return;\n\n    // הוספת הודעת המשתמש\n    const userMessage = { text: inputMsg, fromUser: true };\n    setMessages(prev => [...prev, userMessage]);\n    const newHistory = [...history, inputMsg];\n    setHistory(newHistory);\n\n    try {\n      setIsLoading(true);\n      // שולחים את כל ההיסטוריה כולל ההודעה החדשה\n      console.log(\"API URL:\", process.env.REACT_APP_API_URL);\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          history: newHistory  // שולחים את כל ההיסטוריה + ההודעה הנוכחית\n        })\n      });\n\n      if (!res.ok) {\n        throw new Error('Server error');\n      }\n\n      const data = await res.json();\n      const answer = data?.result || 'Error: No result received';\n\n      // הוספת תשובת השרת להודעות וגם להיסטוריה\n      setMessages(prev => [...prev, { text: answer, fromUser: false }]);\n      setHistory([...newHistory, answer]);\n      setInputMsg('');\n    } catch (error) {\n      setMessages(prev => [...prev, { text: 'Error contacting server', fromUser: false }]);\n    }\n    setIsLoading(false);\n  };\n\n  // כפתור לאיפוס הצ'אט (היסטוריה והודעות)\n  const newChat = () => {\n    setMessages([]);\n    setHistory([]);\n    setInputMsg('');\n  };\n  const handleAudioRecorded = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.webm');\n\n    try {\n      setIsLoading(true);\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/upload-audio`, {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await res.json();\n      const transcript = data.transcript || '';\n\n      // מעדכנים את תיבת הטקסט בטקסט המומר\n      setInputMsg(transcript);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n    setIsLoading(false);\n  };\n  return (\n    <div style={{ maxWidth: '600px', margin: '0 auto', padding: '2rem' }}>\n      <h1>ResQPal Chat</h1>\n      <ChatWindow messages={messages} />\n      <MessageInput inputMsg={inputMsg} setInputMsg={setInputMsg} onSend={sendRequest}  disabled={isLoading} />\n      <VoiceRecorder onAudioRecorded={handleAudioRecorded} />\n      <button onClick={newChat} style={{marginTop: '1rem'}}>New Chat</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}