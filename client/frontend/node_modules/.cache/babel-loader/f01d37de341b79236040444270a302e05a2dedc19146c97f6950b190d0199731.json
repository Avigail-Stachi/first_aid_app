{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\first_aid_app\\\\client\\\\frontend\\\\src\\\\components\\\\ImageCapture.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from \"react\";\n\n// function ImageCapture({ onCapture, onCancel }) {\n//   const videoRef = useRef(null);\n//   const [stream, setStream] = useState(null);\n\n//   const handleImageCapture = async (blob) => {\n//   const formData = new FormData();\n//   formData.append(\"image\", blob, \"burn.jpg\");\n//   }\n\n//   useEffect(() => {\n//     async function startCamera() {\n//       try {\n//         const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true });\n\n//         if (videoRef.current) {\n//           videoRef.current.srcObject = mediaStream;\n\n//           videoRef.current.onloadedmetadata = () => {\n//             videoRef.current.play();\n//           };\n\n//           setStream(mediaStream);\n//         }\n//       } catch (err) {\n//         console.error('Error accessing camera:', err);\n//       }\n//     }\n\n//     startCamera();\n\n//     // פונקציית ניקוי – תעצור את המצלמה כאשר הרכיב יוצא\n//     return () => {\n//       if (stream) {\n//         stream.getTracks().forEach(track => track.stop());\n//       }\n//     };\n//   }, []); // ריק כדי שירוץ פעם אחת בלבד\n\n//   return (\n//     <div>\n//       <video\n//         ref={videoRef}\n//         style={{ width: '100%', maxWidth: '400px' }}\n//         autoPlay\n//         muted\n//         playsInline\n//       />\n//       <div style={{ marginTop: '1rem' }}>\n//         <button onClick={handleImageCapture}>take a pic</button>\n//         <button onClick={onCancel}>cancel</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ImageCapture;\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageCapture({\n  onCapture,\n  onCancel\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  const handleTakePicture = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas) return;\n    const context = canvas.getContext(\"2d\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(blob => {\n      if (blob) {\n        handleImageCapture(blob); // עכשיו באמת שולח Blob\n      } else {\n        console.error(\"Failed to convert canvas to blob\");\n      }\n    }, \"image/jpeg\");\n  };\n  const handleImageCapture = async blob => {\n    const formData = new FormData();\n    formData.append(\"image\", blob, \"burn.jpg\");\n    // שלח את formData לשרת כאן אם צריך\n    console.log(\"Image captured and added to FormData:\", formData);\n    if (onCapture) onCapture(blob); // אפשרי: לקרוא לפונקציית ההורה\n  };\n  useEffect(() => {\n    async function startCamera() {\n      try {\n        const mediaStream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = mediaStream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play();\n          };\n          setStream(mediaStream);\n        }\n      } catch (err) {\n        console.error(\"Error accessing camera:\", err);\n      }\n    }\n    startCamera();\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: \"100%\",\n        maxWidth: \"400px\"\n      },\n      autoPlay: true,\n      muted: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTakePicture,\n        children: \"take a pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageCapture, \"Qz6nfyfDqgSOmbUmDrJU8Y719UU=\");\n_c = ImageCapture;\nexport default ImageCapture;\nvar _c;\n$RefreshReg$(_c, \"ImageCapture\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ImageCapture","onCapture","onCancel","_s","videoRef","canvasRef","stream","setStream","handleTakePicture","video","current","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","toBlob","blob","handleImageCapture","console","error","formData","FormData","append","log","startCamera","mediaStream","navigator","mediaDevices","getUserMedia","srcObject","onloadedmetadata","play","err","getTracks","forEach","track","stop","children","ref","style","maxWidth","autoPlay","muted","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","display","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/first_aid_app/client/frontend/src/components/ImageCapture.jsx"],"sourcesContent":["// import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n// function ImageCapture({ onCapture, onCancel }) {\r\n//   const videoRef = useRef(null);\r\n//   const [stream, setStream] = useState(null);\r\n  \r\n//   const handleImageCapture = async (blob) => {\r\n//   const formData = new FormData();\r\n//   formData.append(\"image\", blob, \"burn.jpg\");\r\n//   }\r\n\r\n\r\n//   useEffect(() => {\r\n//     async function startCamera() {\r\n//       try {\r\n//         const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n\r\n//         if (videoRef.current) {\r\n//           videoRef.current.srcObject = mediaStream;\r\n\r\n//           videoRef.current.onloadedmetadata = () => {\r\n//             videoRef.current.play();\r\n//           };\r\n\r\n//           setStream(mediaStream);\r\n//         }\r\n//       } catch (err) {\r\n//         console.error('Error accessing camera:', err);\r\n//       }\r\n//     }\r\n\r\n//     startCamera();\r\n\r\n//     // פונקציית ניקוי – תעצור את המצלמה כאשר הרכיב יוצא\r\n//     return () => {\r\n//       if (stream) {\r\n//         stream.getTracks().forEach(track => track.stop());\r\n//       }\r\n//     };\r\n//   }, []); // ריק כדי שירוץ פעם אחת בלבד\r\n\r\n//   return (\r\n//     <div>\r\n//       <video\r\n//         ref={videoRef}\r\n//         style={{ width: '100%', maxWidth: '400px' }}\r\n//         autoPlay\r\n//         muted\r\n//         playsInline\r\n//       />\r\n//       <div style={{ marginTop: '1rem' }}>\r\n//         <button onClick={handleImageCapture}>take a pic</button>\r\n//         <button onClick={onCancel}>cancel</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ImageCapture;\r\n\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction ImageCapture({ onCapture, onCancel }) {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [stream, setStream] = useState(null);\r\n\r\n  const handleTakePicture = () => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n\r\n    if (!video || !canvas) return;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    canvas.toBlob((blob) => {\r\n      if (blob) {\r\n        handleImageCapture(blob); // עכשיו באמת שולח Blob\r\n      } else {\r\n        console.error(\"Failed to convert canvas to blob\");\r\n      }\r\n    }, \"image/jpeg\");\r\n  };\r\n\r\n  const handleImageCapture = async (blob) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", blob, \"burn.jpg\");\r\n    // שלח את formData לשרת כאן אם צריך\r\n    console.log(\"Image captured and added to FormData:\", formData);\r\n    if (onCapture) onCapture(blob); // אפשרי: לקרוא לפונקציית ההורה\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function startCamera() {\r\n      try {\r\n        const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = mediaStream;\r\n          videoRef.current.onloadedmetadata = () => {\r\n            videoRef.current.play();\r\n          };\r\n\r\n          setStream(mediaStream);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error accessing camera:\", err);\r\n      }\r\n    }\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <video\r\n        ref={videoRef}\r\n        style={{ width: \"100%\", maxWidth: \"400px\" }}\r\n        autoPlay\r\n        muted\r\n        playsInline\r\n      />\r\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n      <div style={{ marginTop: \"1rem\" }}>\r\n        <button onClick={handleTakePicture}>take a pic</button>\r\n        <button onClick={onCancel}>cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCapture;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}