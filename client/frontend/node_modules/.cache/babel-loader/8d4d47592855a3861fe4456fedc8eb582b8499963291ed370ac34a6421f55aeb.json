{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nfunction ImageCapture({\n  onCapture,\n  onCancel\n}) {\n  _s();\n  const videoRef = useRef(null);\n  //const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  useEffect(() => {\n    async function startCamera() {\n      try {\n        const mediaStream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = mediaStream;\n\n          // נחכה שהוידאו יטען metadata ואז נפעיל play()\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play();\n          };\n          setStream(mediaStream);\n        }\n      } catch (err) {\n        console.error('Error accessing camera:', err);\n      }\n    }\n    startCamera();\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [stream]);\n}\n_s(ImageCapture, \"lWoPHR2OaCrP2vedMVWHu+RNyMA=\");\n_c = ImageCapture;\nexport default ImageCapture;\nvar _c;\n$RefreshReg$(_c, \"ImageCapture\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ImageCapture","onCapture","onCancel","_s","videoRef","stream","setStream","startCamera","mediaStream","navigator","mediaDevices","getUserMedia","video","current","srcObject","onloadedmetadata","play","err","console","error","getTracks","forEach","track","stop","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/first_aid_app/client/frontend/src/components/ImageCapture.jsx"],"sourcesContent":["import React, { useState, useRef,useEffect } from \"react\";\r\n\r\nfunction ImageCapture({ onCapture, onCancel }) {\r\n  const videoRef = useRef(null);\r\n  //const canvasRef = useRef(null);\r\n  const [stream, setStream] = useState(null);\r\n\r\n  useEffect(() => {\r\n  async function startCamera() {\r\n    try {\r\n      const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = mediaStream;\r\n\r\n        // נחכה שהוידאו יטען metadata ואז נפעיל play()\r\n        videoRef.current.onloadedmetadata = () => {\r\n          videoRef.current.play();\r\n        };\r\n\r\n        setStream(mediaStream);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error accessing camera:', err);\r\n    }\r\n  }\r\n\r\n  startCamera();\r\n\r\n  return () => {\r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n    }\r\n  };\r\n}, [stream]);}\r\nexport default ImageCapture;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAACC,SAAS,QAAQ,OAAO;AAEzD,SAASC,YAAYA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B;EACA,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1CE,SAAS,CAAC,MAAM;IAChB,eAAeQ,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QAC9E,IAAIR,QAAQ,CAACS,OAAO,EAAE;UACpBT,QAAQ,CAACS,OAAO,CAACC,SAAS,GAAGN,WAAW;;UAExC;UACAJ,QAAQ,CAACS,OAAO,CAACE,gBAAgB,GAAG,MAAM;YACxCX,QAAQ,CAACS,OAAO,CAACG,IAAI,CAAC,CAAC;UACzB,CAAC;UAEDV,SAAS,CAACE,WAAW,CAAC;QACxB;MACF,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC/C;IACF;IAEAV,WAAW,CAAC,CAAC;IAEb,OAAO,MAAM;MACX,IAAIF,MAAM,EAAE;QACVA,MAAM,CAACe,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACnD;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC;AAAC;AAACF,EAAA,CA/BLH,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAgCrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}