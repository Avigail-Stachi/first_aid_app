{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\first_aid_app\\\\client\\\\frontend\\\\src\\\\components\\\\VoiceRecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VoiceRecorder({\n  onAudioRecorded\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const streamRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const dataArrayRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!isRecording) {\n      cancelAnimationFrame(animationIdRef.current);\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n        audioContextRef.current = null;\n      }\n      // ניקוי ה־stream אחרי הפסקת הקלטה\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n    }\n  }, [isRecording]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      streamRef.current = stream; // שמירת הזרם לניקוי אחר כך\n      const recorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = recorder;\n      audioChunksRef.current = [];\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      source.connect(analyserRef.current);\n      analyserRef.current.fftSize = 2048;\n      const bufferLength = analyserRef.current.fftSize;\n      dataArrayRef.current = new Uint8Array(bufferLength);\n      recorder.start();\n      setIsRecording(true);\n      recorder.ondataavailable = e => {\n        audioChunksRef.current.push(e.data);\n      };\n      recorder.onstop = () => {\n        const blob = new Blob(audioChunksRef.current, {\n          type: \"audio/webm\"\n        });\n        onAudioRecorded(blob);\n      };\n      drawWave();\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n      alert(\"Cannot access microphone. Please allow microphone access.\");\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n    }\n    setIsRecording(false);\n  };\n  const drawWave = () => {\n    if (!analyserRef.current || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext(\"2d\");\n    const width = canvas.width;\n    const height = canvas.height;\n    const draw = () => {\n      animationIdRef.current = requestAnimationFrame(draw);\n      analyserRef.current.getByteTimeDomainData(dataArrayRef.current);\n\n      // ניקוי הקנבס לפני ציור מחדש\n      canvasCtx.clearRect(0, 0, width, height);\n      canvasCtx.fillStyle = \"rgba(255, 255, 255, 0.1)\";\n      canvasCtx.fillRect(0, 0, width, height);\n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = \"rgb(0, 123, 255)\";\n      canvasCtx.beginPath();\n      const sliceWidth = width / dataArrayRef.current.length;\n      let x = 0;\n      for (let i = 0; i < dataArrayRef.current.length; i++) {\n        const v = dataArrayRef.current[i] / 128.0;\n        const y = v * height / 2;\n        if (i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n        x += sliceWidth;\n      }\n      canvasCtx.lineTo(width, height / 2);\n      canvasCtx.stroke();\n    };\n    draw();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 80,\n      style: {\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isRecording ? stopRecording : startRecording,\n      children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceRecorder, \"zLnepDTh2qdfvTmZMUkta9T5b3A=\");\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","VoiceRecorder","onAudioRecorded","_s","isRecording","setIsRecording","mediaRecorderRef","audioChunksRef","streamRef","audioContextRef","analyserRef","dataArrayRef","animationIdRef","canvasRef","cancelAnimationFrame","current","close","getTracks","forEach","track","stop","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","window","AudioContext","webkitAudioContext","source","createMediaStreamSource","createAnalyser","connect","fftSize","bufferLength","Uint8Array","start","ondataavailable","e","push","data","onstop","blob","Blob","type","drawWave","error","console","alert","stopRecording","state","canvas","canvasCtx","getContext","width","height","draw","requestAnimationFrame","getByteTimeDomainData","clearRect","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","length","x","i","v","y","moveTo","lineTo","stroke","className","children","ref","style","border","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/first_aid_app/client/frontend/src/components/VoiceRecorder.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction VoiceRecorder({ onAudioRecorded }) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n  const streamRef = useRef(null);\r\n\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const dataArrayRef = useRef(null);\r\n  const animationIdRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!isRecording) {\r\n      cancelAnimationFrame(animationIdRef.current);\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n        audioContextRef.current = null;\r\n      }\r\n      // ניקוי ה־stream אחרי הפסקת הקלטה\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach((track) => track.stop());\r\n        streamRef.current = null;\r\n      }\r\n    }\r\n  }, [isRecording]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      streamRef.current = stream; // שמירת הזרם לניקוי אחר כך\r\n      const recorder = new MediaRecorder(stream);\r\n      mediaRecorderRef.current = recorder;\r\n      audioChunksRef.current = [];\r\n\r\n      audioContextRef.current = new (window.AudioContext ||\r\n        window.webkitAudioContext)();\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      source.connect(analyserRef.current);\r\n      analyserRef.current.fftSize = 2048;\r\n      const bufferLength = analyserRef.current.fftSize;\r\n      dataArrayRef.current = new Uint8Array(bufferLength);\r\n\r\n      recorder.start();\r\n      setIsRecording(true);\r\n\r\n      recorder.ondataavailable = (e) => {\r\n        audioChunksRef.current.push(e.data);\r\n      };\r\n\r\n      recorder.onstop = () => {\r\n        const blob = new Blob(audioChunksRef.current, { type: \"audio/webm\" });\r\n        onAudioRecorded(blob);\r\n      };\r\n\r\n      drawWave();\r\n    } catch (error) {\r\n      console.error(\"Error starting recording:\", error);\r\n      alert(\"Cannot access microphone. Please allow microphone access.\");\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (\r\n      mediaRecorderRef.current &&\r\n      mediaRecorderRef.current.state !== \"inactive\"\r\n    ) {\r\n      mediaRecorderRef.current.stop();\r\n    }\r\n    setIsRecording(false);\r\n  };\r\n\r\n  const drawWave = () => {\r\n    if (!analyserRef.current || !canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const canvasCtx = canvas.getContext(\"2d\");\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n\r\n    const draw = () => {\r\n      animationIdRef.current = requestAnimationFrame(draw);\r\n      analyserRef.current.getByteTimeDomainData(dataArrayRef.current);\r\n\r\n      // ניקוי הקנבס לפני ציור מחדש\r\n      canvasCtx.clearRect(0, 0, width, height);\r\n\r\n      canvasCtx.fillStyle = \"rgba(255, 255, 255, 0.1)\";\r\n      canvasCtx.fillRect(0, 0, width, height);\r\n\r\n      canvasCtx.lineWidth = 2;\r\n      canvasCtx.strokeStyle = \"rgb(0, 123, 255)\";\r\n      canvasCtx.beginPath();\r\n\r\n      const sliceWidth = width / dataArrayRef.current.length;\r\n      let x = 0;\r\n\r\n      for (let i = 0; i < dataArrayRef.current.length; i++) {\r\n        const v = dataArrayRef.current[i] / 128.0;\r\n        const y = (v * height) / 2;\r\n        if (i === 0) {\r\n          canvasCtx.moveTo(x, y);\r\n        } else {\r\n          canvasCtx.lineTo(x, y);\r\n        }\r\n        x += sliceWidth;\r\n      }\r\n      canvasCtx.lineTo(width, height / 2);\r\n      canvasCtx.stroke();\r\n    };\r\n\r\n    draw();\r\n  };\r\n\r\n  return (\r\n    <div className=\"voice-recorder\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={300}\r\n        height={80}\r\n        style={{ border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n      />\r\n      <button onClick={isRecording ? stopRecording : startRecording}>\r\n        {isRecording ? \"Stop Recording\" : \"Start Recording\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VoiceRecorder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}