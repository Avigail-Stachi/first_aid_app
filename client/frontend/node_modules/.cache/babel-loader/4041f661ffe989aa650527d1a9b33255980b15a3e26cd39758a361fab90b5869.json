{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\first_aid_app\\\\client\\\\frontend\\\\src\\\\components\\\\Chat\\\\image\\\\ImageUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = ({\n  onImageSend\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [preview, setPreview] = useState(null);\n  const [showCamera, setShowCamera] = useState(false);\n  const [stream, setStream] = useState(null);\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setPreview(imageUrl);\n      await sendImageToServer(file, imageUrl);\n    }\n  };\n  const handleOpenFileDialog = () => {\n    fileInputRef.current.click();\n  };\n  const handleStartCamera = async () => {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      setStream(mediaStream);\n      setShowCamera(true);\n    } catch (err) {\n      console.error(\"Failed to access camera:\", err);\n      alert(\"Camera access failed. Please allow camera permissions.\");\n    }\n  };\n  useEffect(() => {\n    if (showCamera && videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [showCamera, stream]);\n  const handleTakePhoto = async () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas) return;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(async blob => {\n      if (!blob) {\n        console.error(\"Failed to capture image from camera\");\n        return;\n      }\n      const imageUrl = URL.createObjectURL(blob);\n      setPreview(imageUrl);\n      await sendImageToServer(blob, imageUrl);\n      stopCamera();\n    }, \"image/jpeg\");\n  };\n  const stopCamera = useCallback(() => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n    setShowCamera(false);\n    setStream(null);\n  }, [stream]);\n  const sendImageToServer = async (fileOrBlob, previewUrl) => {\n    onImageSend(previewUrl);\n    const formData = new FormData();\n    formData.append(\"image\", fileOrBlob);\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/upload-image`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) {\n        const errorText = await res.text();\n        console.error(\"Image upload error:\", errorText);\n        alert(\"Error uploading image: \" + errorText);\n      } else {\n        const result = await res.json();\n        console.log(\"Server response:\", result);\n      }\n    } catch (err) {\n      console.error(\"Failed to send image:\", err.message);\n      alert(\"Upload failed: \" + err.message);\n    }\n  };\n  useEffect(() => {\n    return () => stopCamera(); // cleanup on unmount\n  }, [stopCamera]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenFileDialog,\n      children: \"\\uD83D\\uDCC1 Upload from Computer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartCamera,\n      children: \"\\uD83D\\uDCF7 Take a Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      ref: fileInputRef,\n      style: {\n        display: \"none\"\n      },\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), showCamera && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        style: {\n          width: \"100%\",\n          maxWidth: \"400px\",\n          borderRadius: \"12px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTakePhoto,\n          children: \"\\uD83D\\uDCF8 Capture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopCamera,\n          style: {\n            marginLeft: \"1rem\"\n          },\n          children: \"\\u274C Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\",\n        style: {\n          maxWidth: \"100%\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"8px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"mnt3Mp/u7beHGIFRjfbovj+peRY=\");\n_c = ImageUploader;\nexport default ImageUploader;\n\n// import React, { useRef, useState, useEffect, useCallback } from \"react\";\n\n// const ImageUploader = ({ onImageSend }) => {\n//   const fileInputRef = useRef(null);\n//   const videoRef = useRef(null);\n//   const canvasRef = useRef(null);\n//   const [preview, setPreview] = useState(null);\n//   const [showCamera, setShowCamera] = useState(false);\n//   const [stream, setStream] = useState(null);\n\n//   const handleFileChange = async (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       const imageUrl = URL.createObjectURL(file);\n//       setPreview(imageUrl);\n//       await sendImageToServer(file, imageUrl);\n//     }\n//   };\n\n//   const handleOpenFileDialog = () => {\n//     fileInputRef.current.click();\n//   };\n\n//   const handleStartCamera = async () => {\n//     try {\n//       const mediaStream = await navigator.mediaDevices.getUserMedia({\n//         video: true,\n//       });\n//       //videoRef.current.srcObject = mediaStream;\n//       setStream(mediaStream);\n//       setShowCamera(true);\n//     } catch (err) {\n//       console.error(\"Failed to access camera:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (showCamera && videoRef.current && stream) {\n//       videoRef.current.srcObject = stream;\n//     }\n//   }, [showCamera, stream]);\n\n//   const handleTakePhoto = async () => {\n//     const video = videoRef.current;\n//     const canvas = canvasRef.current;\n//     if (!video || !canvas) {\n//       console.error(\"Video or canvas element not available\");\n//       return;\n//     }\n//     canvas.width = video.videoWidth;\n//     canvas.height = video.videoHeight;\n//     const ctx = canvas.getContext(\"2d\");\n//     ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n//     canvas.toBlob(async (blob) => {\n//       if (!blob) {\n//         console.error(\"Failed to capture image from camera\");\n//         return;\n//       }\n//       const imageUrl = URL.createObjectURL(blob);\n//       setPreview(imageUrl);\n//       await sendImageToServer(blob, imageUrl);\n//       stopCamera();\n//     }, \"image/jpeg\");\n//   };\n\n//   const stopCamera = useCallback(() => {\n//     if (stream) {\n//       stream.getTracks().forEach((track) => track.stop());\n//     }\n//     setShowCamera(false);\n//     setStream(null);\n//   }, [stream]);\n\n//   const sendImageToServer = async (fileOrBlob, previewUrl) => {\n//     onImageSend(previewUrl);\n\n//     const formData = new FormData();\n//     formData.append(\"image\", fileOrBlob);\n\n//     try {\n//       const res = await fetch(`${process.env.REACT_APP_API_URL}/upload-image`, {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (!res.ok) {\n//         const errorText = await res.text();\n//         console.error(\"Image upload error:\", errorText);\n//       } else {\n//         console.log(\"Image uploaded successfully\");\n//       }\n//     } catch (err) {\n//       console.error(\"Failed to send image:\", err.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     return () => stopCamera(); // Clean up on unmount\n//   }, [stopCamera]);\n\n//   return (\n//     <div>\n//       <button onClick={handleOpenFileDialog}>📁 Upload from Computer</button>\n//       <button onClick={handleStartCamera}>📷 Take a Picture</button>\n\n//       <input\n//         type=\"file\"\n//         accept=\"image/*\"\n//         ref={fileInputRef}\n//         style={{ display: \"none\" }}\n//         onChange={handleFileChange}\n//       />\n\n//       {showCamera && (\n//         <div>\n//           <video\n//             ref={videoRef}\n//             autoPlay\n//             style={{ width: \"100%\", maxWidth: \"400px\" }}\n//           />\n//           <button onClick={handleTakePhoto}>📸 Capture</button>\n//         </div>\n//       )}\n\n//       <canvas ref={canvasRef} style={{ display: \"none\" }} />\n\n//       {preview && (\n//         <div style={{ marginTop: \"1rem\" }}>\n//           <strong>Preview:</strong>\n//           <br />\n//           <img src={preview} alt=\"Preview\" style={{ maxWidth: \"100%\" }} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","jsxDEV","_jsxDEV","ImageUploader","onImageSend","_s","fileInputRef","videoRef","canvasRef","preview","setPreview","showCamera","setShowCamera","stream","setStream","handleFileChange","e","file","target","files","imageUrl","URL","createObjectURL","sendImageToServer","handleOpenFileDialog","current","click","handleStartCamera","mediaStream","navigator","mediaDevices","getUserMedia","video","err","console","error","alert","srcObject","handleTakePhoto","canvas","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","toBlob","blob","stopCamera","getTracks","forEach","track","stop","fileOrBlob","previewUrl","formData","FormData","append","res","fetch","process","env","REACT_APP_API_URL","method","body","ok","errorText","text","result","json","log","message","style","textAlign","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","ref","display","onChange","marginTop","autoPlay","playsInline","maxWidth","borderRadius","marginLeft","src","alt","border","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Documents/first_aid_app/client/frontend/src/components/Chat/image/ImageUploader.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\nconst ImageUploader = ({ onImageSend }) => {\r\n  const fileInputRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [showCamera, setShowCamera] = useState(false);\r\n  const [stream, setStream] = useState(null);\r\n\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setPreview(imageUrl);\r\n      await sendImageToServer(file, imageUrl);\r\n    }\r\n  };\r\n\r\n  const handleOpenFileDialog = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleStartCamera = async () => {\r\n    try {\r\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n      });\r\n      setStream(mediaStream);\r\n      setShowCamera(true);\r\n    } catch (err) {\r\n      console.error(\"Failed to access camera:\", err);\r\n      alert(\"Camera access failed. Please allow camera permissions.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showCamera && videoRef.current && stream) {\r\n      videoRef.current.srcObject = stream;\r\n    }\r\n  }, [showCamera, stream]);\r\n\r\n  const handleTakePhoto = async () => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!video || !canvas) return;\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    canvas.toBlob(async (blob) => {\r\n      if (!blob) {\r\n        console.error(\"Failed to capture image from camera\");\r\n        return;\r\n      }\r\n      const imageUrl = URL.createObjectURL(blob);\r\n      setPreview(imageUrl);\r\n      await sendImageToServer(blob, imageUrl);\r\n      stopCamera();\r\n    }, \"image/jpeg\");\r\n  };\r\n\r\n  const stopCamera = useCallback(() => {\r\n    if (stream) {\r\n      stream.getTracks().forEach((track) => track.stop());\r\n    }\r\n    setShowCamera(false);\r\n    setStream(null);\r\n  }, [stream]);\r\n\r\n  const sendImageToServer = async (fileOrBlob, previewUrl) => {\r\n    onImageSend(previewUrl);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", fileOrBlob);\r\n\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/upload-image`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorText = await res.text();\r\n        console.error(\"Image upload error:\", errorText);\r\n        alert(\"Error uploading image: \" + errorText);\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(\"Server response:\", result);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Failed to send image:\", err.message);\r\n      alert(\"Upload failed: \" + err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => stopCamera(); // cleanup on unmount\r\n  }, [stopCamera]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n      <button onClick={handleOpenFileDialog}>📁 Upload from Computer</button>\r\n      <button onClick={handleStartCamera}>📷 Take a Picture</button>\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        ref={fileInputRef}\r\n        style={{ display: \"none\" }}\r\n        onChange={handleFileChange}\r\n      />\r\n\r\n      {showCamera && (\r\n        <div style={{ marginTop: \"1rem\" }}>\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            playsInline\r\n            style={{ width: \"100%\", maxWidth: \"400px\", borderRadius: \"12px\" }}\r\n          />\r\n          <div style={{ marginTop: \"1rem\" }}>\r\n            <button onClick={handleTakePhoto}>📸 Capture</button>\r\n            <button onClick={stopCamera} style={{ marginLeft: \"1rem\" }}>\r\n              ❌ Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n\r\n      {preview && (\r\n        <div style={{ marginTop: \"1rem\" }}>\r\n          <strong>Preview:</strong>\r\n          <br />\r\n          <img\r\n            src={preview}\r\n            alt=\"Preview\"\r\n            style={{ maxWidth: \"100%\", border: \"1px solid #ccc\", borderRadius: \"8px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n\r\n\r\n// import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\n// const ImageUploader = ({ onImageSend }) => {\r\n//   const fileInputRef = useRef(null);\r\n//   const videoRef = useRef(null);\r\n//   const canvasRef = useRef(null);\r\n//   const [preview, setPreview] = useState(null);\r\n//   const [showCamera, setShowCamera] = useState(false);\r\n//   const [stream, setStream] = useState(null);\r\n\r\n//   const handleFileChange = async (e) => {\r\n//     const file = e.target.files[0];\r\n//     if (file) {\r\n//       const imageUrl = URL.createObjectURL(file);\r\n//       setPreview(imageUrl);\r\n//       await sendImageToServer(file, imageUrl);\r\n//     }\r\n//   };\r\n\r\n//   const handleOpenFileDialog = () => {\r\n//     fileInputRef.current.click();\r\n//   };\r\n\r\n//   const handleStartCamera = async () => {\r\n//     try {\r\n//       const mediaStream = await navigator.mediaDevices.getUserMedia({\r\n//         video: true,\r\n//       });\r\n//       //videoRef.current.srcObject = mediaStream;\r\n//       setStream(mediaStream);\r\n//       setShowCamera(true);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to access camera:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (showCamera && videoRef.current && stream) {\r\n//       videoRef.current.srcObject = stream;\r\n//     }\r\n//   }, [showCamera, stream]);\r\n\r\n//   const handleTakePhoto = async () => {\r\n//     const video = videoRef.current;\r\n//     const canvas = canvasRef.current;\r\n//     if (!video || !canvas) {\r\n//       console.error(\"Video or canvas element not available\");\r\n//       return;\r\n//     }\r\n//     canvas.width = video.videoWidth;\r\n//     canvas.height = video.videoHeight;\r\n//     const ctx = canvas.getContext(\"2d\");\r\n//     ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n//     canvas.toBlob(async (blob) => {\r\n//       if (!blob) {\r\n//         console.error(\"Failed to capture image from camera\");\r\n//         return;\r\n//       }\r\n//       const imageUrl = URL.createObjectURL(blob);\r\n//       setPreview(imageUrl);\r\n//       await sendImageToServer(blob, imageUrl);\r\n//       stopCamera();\r\n//     }, \"image/jpeg\");\r\n//   };\r\n\r\n//   const stopCamera = useCallback(() => {\r\n//     if (stream) {\r\n//       stream.getTracks().forEach((track) => track.stop());\r\n//     }\r\n//     setShowCamera(false);\r\n//     setStream(null);\r\n//   }, [stream]);\r\n\r\n//   const sendImageToServer = async (fileOrBlob, previewUrl) => {\r\n//     onImageSend(previewUrl);\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", fileOrBlob);\r\n\r\n//     try {\r\n//       const res = await fetch(`${process.env.REACT_APP_API_URL}/upload-image`, {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         const errorText = await res.text();\r\n//         console.error(\"Image upload error:\", errorText);\r\n//       } else {\r\n//         console.log(\"Image uploaded successfully\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Failed to send image:\", err.message);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     return () => stopCamera(); // Clean up on unmount\r\n//   }, [stopCamera]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleOpenFileDialog}>📁 Upload from Computer</button>\r\n//       <button onClick={handleStartCamera}>📷 Take a Picture</button>\r\n\r\n//       <input\r\n//         type=\"file\"\r\n//         accept=\"image/*\"\r\n//         ref={fileInputRef}\r\n//         style={{ display: \"none\" }}\r\n//         onChange={handleFileChange}\r\n//       />\r\n\r\n//       {showCamera && (\r\n//         <div>\r\n//           <video\r\n//             ref={videoRef}\r\n//             autoPlay\r\n//             style={{ width: \"100%\", maxWidth: \"400px\" }}\r\n//           />\r\n//           <button onClick={handleTakePhoto}>📸 Capture</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n\r\n//       {preview && (\r\n//         <div style={{ marginTop: \"1rem\" }}>\r\n//           <strong>Preview:</strong>\r\n//           <br />\r\n//           <img src={preview} alt=\"Preview\" style={{ maxWidth: \"100%\" }} />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ImageUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}